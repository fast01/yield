// yield/marshal/marshaller_test_types.idl

// Copyright (c) 2011 Minor Gordon
// All rights reserved

// This source file is part of the Yield project.

// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
// * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
// * Redistributions in binary form must reproduce the above copyright
// notice, this list of conditions and the following disclaimer in the
// documentation and/or other materials provided with the distribution.
// * Neither the name of the Yield project nor the
// names of its contributors may be used to endorse or promote products
// derived from this software without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL Minor Gordon BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

module yield
{
  module marshal
  {
    struct BooleanStruct { boolean value; };
    typedef map<double, string> DoubleMap;
    struct DoubleMapStruct { DoubleMap value; };
    typedef sequence<double> DoubleSet;
    struct DoubleSetStruct { DoubleSet value; };
    struct DoubleStruct { double value; };
    struct EmptyStruct { };
    struct FloatStruct { float value; }
    struct Int8Struct { int8_t value; };
    struct Int16Struct { int16_t value; };
    struct Int32Struct { int32_t value; };
    struct Int64Struct { int64_t value; };
    typedef map<string, string> StringMap;
    struct StringMapStruct { StringMap value; }
    typedef sequence<string> StringSet;
    struct StringSetStruct { StringSet value; }
    struct StringStruct { string value; }
    struct Uint8Struct { uint8_t value; };
    struct Uint16Struct { uint16_t value; };
    struct Uint32Struct { uint32_t value; };
    struct Uint64Struct { uint64_t value; };
  }
}
